[2023-11-30 21:26:16,875] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-11-30 21:26:16,894] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2023-11-30 21:26:16,897] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-11-30 21:26:16,904] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-11-30 21:26:16,910] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-11-30 21:26:16,913] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-11-30 21:26:16,926] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 86) (kafka.controller.KafkaController)
[2023-11-30 21:26:16,942] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-11-30 21:26:16,950] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-11-30 21:26:16,952] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-11-30 21:26:16,953] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-11-30 21:26:16,953] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-11-30 21:26:16,954] INFO [Controller id=0] Current list of topics in the cluster: HashSet(SockPurchasesTopic) (kafka.controller.KafkaController)
[2023-11-30 21:26:16,954] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-11-30 21:26:16,957] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-11-30 21:26:16,958] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-11-30 21:26:16,958] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-11-30 21:26:16,959] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-11-30 21:26:16,961] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-11-30 21:26:16,972] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-11-30 21:26:16,976] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-11-30 21:26:16,983] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 69b7a8c9cfbe:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 69b7a8c9cfbe:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2023-11-30 21:26:16,990] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-11-30 21:26:16,990] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=SockPurchasesTopic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-11-30 21:26:16,991] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-11-30 21:26:16,992] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-11-30 21:26:16,993] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(SockPurchasesTopic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-11-30 21:26:16,993] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2023-11-30 21:26:16,998] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-11-30 21:26:16,998] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-11-30 21:26:16,998] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-11-30 21:26:16,999] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-11-30 21:26:16,999] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-11-30 21:26:17,006] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-11-30 21:26:17,088] INFO [RequestSendThread controllerId=0] Controller 0 connected to 69b7a8c9cfbe:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-11-30 21:26:22,007] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-30 21:26:22,007] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-30 21:26:22,008] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-11-30 21:26:22,009] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-30 21:26:52,861] INFO [Controller id=0] New topics: [Set(SockSalesTopic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(SockSalesTopic,Some(KAAQHNNjRZGGxE_A39wmAQ),Map(SockSalesTopic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-11-30 21:26:52,861] INFO [Controller id=0] New partition creation callback for SockSalesTopic-0 (kafka.controller.KafkaController)
[2023-11-30 21:26:53,906] INFO [Controller id=0] New topics: [Set(ResultsTopic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(ResultsTopic,Some(gDjcUlyUTVqcTsDc-hUIJA),Map(ResultsTopic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-11-30 21:26:53,907] INFO [Controller id=0] New partition creation callback for ResultsTopic-0 (kafka.controller.KafkaController)
[2023-11-30 21:26:54,966] INFO [Controller id=0] New topics: [Set(DBInfoTopic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(DBInfoTopic,Some(Tnzc286sTZywu9GV-uTKKA),Map(DBInfoTopic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-11-30 21:26:54,966] INFO [Controller id=0] New partition creation callback for DBInfoTopic-0 (kafka.controller.KafkaController)
[2023-11-30 21:30:59,372] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-11-30 21:30:59,376] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-11-30 21:30:59,383] INFO [Controller id=0] New topics: [HashSet(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(g1OBTCO2QaC34aluQKWuhw),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-11-30 21:30:59,383] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-11-30 21:31:22,000] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-30 21:31:22,001] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-30 21:31:22,002] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-30 21:31:22,002] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-30 21:36:21,997] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-30 21:36:21,999] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-30 21:36:22,005] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-30 21:36:22,006] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-30 21:41:21,999] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-30 21:41:22,001] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-30 21:41:22,007] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-30 21:41:22,008] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-30 21:46:21,981] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-30 21:46:21,983] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-30 21:46:21,987] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-30 21:46:21,988] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-30 21:51:21,979] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-30 21:51:21,982] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-30 21:51:21,987] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-30 21:51:21,988] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-11-30 21:53:17,981] DEBUG [Controller id=0] Delete topics listener fired for topics SockPurchasesTopic to be deleted (kafka.controller.KafkaController)
[2023-11-30 21:53:17,982] INFO [Controller id=0] Starting topic deletion for topics SockPurchasesTopic (kafka.controller.KafkaController)
[2023-11-30 21:53:17,983] INFO [Topic Deletion Manager 0] Handling deletion for topics SockPurchasesTopic (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:17,984] INFO [Topic Deletion Manager 0] Deletion of topic SockPurchasesTopic (re)started (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:17,988] INFO [RequestSendThread controllerId=0] Controller 0 connected to 69b7a8c9cfbe:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-11-30 21:53:18,028] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(SockPurchasesTopic-0 -> NONE) (kafka.controller.KafkaController)
[2023-11-30 21:53:18,030] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=SockPurchasesTopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:18,031] INFO [Topic Deletion Manager 0] Handling deletion for topics SockPurchasesTopic (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:18,052] INFO [Topic Deletion Manager 0] Deletion of topic SockPurchasesTopic successfully completed (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:18,054] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-11-30 21:53:18,054] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-11-30 21:53:19,031] DEBUG [Controller id=0] Delete topics listener fired for topics SockSalesTopic to be deleted (kafka.controller.KafkaController)
[2023-11-30 21:53:19,031] INFO [Controller id=0] Starting topic deletion for topics SockSalesTopic (kafka.controller.KafkaController)
[2023-11-30 21:53:19,031] INFO [Topic Deletion Manager 0] Handling deletion for topics SockSalesTopic (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:19,032] INFO [Topic Deletion Manager 0] Deletion of topic SockSalesTopic (re)started (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:19,052] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(SockSalesTopic-0 -> NONE) (kafka.controller.KafkaController)
[2023-11-30 21:53:19,052] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=SockSalesTopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:19,053] INFO [Topic Deletion Manager 0] Handling deletion for topics SockSalesTopic (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:19,065] INFO [Topic Deletion Manager 0] Deletion of topic SockSalesTopic successfully completed (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:19,066] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-11-30 21:53:19,067] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-11-30 21:53:20,150] DEBUG [Controller id=0] Delete topics listener fired for topics ResultsTopic to be deleted (kafka.controller.KafkaController)
[2023-11-30 21:53:20,150] INFO [Controller id=0] Starting topic deletion for topics ResultsTopic (kafka.controller.KafkaController)
[2023-11-30 21:53:20,150] INFO [Topic Deletion Manager 0] Handling deletion for topics ResultsTopic (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:20,150] INFO [Topic Deletion Manager 0] Deletion of topic ResultsTopic (re)started (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:20,175] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(ResultsTopic-0 -> NONE) (kafka.controller.KafkaController)
[2023-11-30 21:53:20,175] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=ResultsTopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:20,176] INFO [Topic Deletion Manager 0] Handling deletion for topics ResultsTopic (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:20,185] INFO [Topic Deletion Manager 0] Deletion of topic ResultsTopic successfully completed (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:20,195] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-11-30 21:53:20,202] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-11-30 21:53:21,342] DEBUG [Controller id=0] Delete topics listener fired for topics DBInfoTopic to be deleted (kafka.controller.KafkaController)
[2023-11-30 21:53:21,343] INFO [Controller id=0] Starting topic deletion for topics DBInfoTopic (kafka.controller.KafkaController)
[2023-11-30 21:53:21,343] INFO [Topic Deletion Manager 0] Handling deletion for topics DBInfoTopic (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:21,343] INFO [Topic Deletion Manager 0] Deletion of topic DBInfoTopic (re)started (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:21,355] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(DBInfoTopic-0 -> NONE) (kafka.controller.KafkaController)
[2023-11-30 21:53:21,355] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=DBInfoTopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:21,355] INFO [Topic Deletion Manager 0] Handling deletion for topics DBInfoTopic (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:21,362] INFO [Topic Deletion Manager 0] Deletion of topic DBInfoTopic successfully completed (kafka.controller.TopicDeletionManager)
[2023-11-30 21:53:21,362] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-11-30 21:53:21,363] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-11-30 21:53:27,478] INFO [Controller id=0] New topics: [Set(SockPurchasesTopic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(SockPurchasesTopic,Some(ggoc86-zRcuJ0CYWmapoww),Map(SockPurchasesTopic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-11-30 21:53:27,478] INFO [Controller id=0] New partition creation callback for SockPurchasesTopic-0 (kafka.controller.KafkaController)
[2023-11-30 21:53:28,547] INFO [Controller id=0] New topics: [Set(SockSalesTopic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(SockSalesTopic,Some(n3Y4sCKdQDO7nqUh55cVdw),Map(SockSalesTopic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-11-30 21:53:28,547] INFO [Controller id=0] New partition creation callback for SockSalesTopic-0 (kafka.controller.KafkaController)
[2023-11-30 21:53:29,667] INFO [Controller id=0] New topics: [Set(ResultsTopic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(ResultsTopic,Some(Y8sB4uCITIaqFYn1pSAIKw),Map(ResultsTopic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-11-30 21:53:29,667] INFO [Controller id=0] New partition creation callback for ResultsTopic-0 (kafka.controller.KafkaController)
[2023-11-30 21:53:30,771] INFO [Controller id=0] New topics: [HashSet(DBInfoTopic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(DBInfoTopic,Some(EQ6JgaEsTySXzV1RZ3FcBg),Map(DBInfoTopic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-11-30 21:53:30,771] INFO [Controller id=0] New partition creation callback for DBInfoTopic-0 (kafka.controller.KafkaController)
[2023-11-30 21:56:21,979] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-11-30 21:56:21,981] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-11-30 21:56:21,983] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-11-30 21:56:21,984] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
